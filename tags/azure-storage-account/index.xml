<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure-Storage-Account on Manuss20 Blog</title><link>https://manuss20.com/tags/azure-storage-account/</link><description>Recent content in Azure-Storage-Account on Manuss20 Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright © {year} Manuel Sánchez. All Rights Reserved.</copyright><lastBuildDate>Sun, 06 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://manuss20.com/tags/azure-storage-account/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy Azure Storage Account con Terraform JSON</title><link>https://manuss20.com/2021/06/06/deploy-azure-storage-account-con-terraform-json/</link><pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate><guid>https://manuss20.com/2021/06/06/deploy-azure-storage-account-con-terraform-json/</guid><description>En este post quiero explicaros como podemos desplegar Infraestructura como código a través de Terraform, pero en vez de usar la sintaxis nativa usaremos la alternativa que es compatible con JSON.
¿Esto como sucede? Terraform también soporta una sintaxis alternativa que es compatible con JSON. Esta sintaxis es útil cuando se generan partes de una configuración mediante programación, ya que se pueden utilizar las bibliotecas JSON existentes para preparar los archivos de configuración generados.</description></item></channel></rss>